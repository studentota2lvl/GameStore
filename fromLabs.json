{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "envPrefixName": {
            "type": "string",
            "metadata": {
                "description": "Prefix for the environment (2-5 characters)"
            },
            "defaultValue": "",
            "minLength": 2,
            "maxLength": 5
        },
        "username": {
            "type": "string",
            "metadata": {
                "description": "SQL IaaS VM local administrator username"
            }
        },
        "password": {
            "type": "securestring",
            "metadata": {
                "description": "SQL IaaS VM local administrator password"
            }
        },
        "sqlAuthenticationLogin": {
            "type": "string"
        },
        "sqlAuthenticationPassword": {
            "type": "securestring"
        },
        "webSrvVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1",
                "Standard_D2_v2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the Web Server VMs Created"
            },
            "defaultValue": "Standard_D2_v2"
        },
        "numberOfWebSrvs": {
            "type": "int",
            "metadata": {
                "description": "Number of Web Servers"
            },
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 6
        },
        "sqlVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_DS1",
                "Standard_DS2",
                "Standard_D2_v2",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the SQL VM Created"
            },
            "defaultValue": "Standard_D2_v2"
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "storageName": "[concat(parameters('envPrefixName'), 'stg', uniqueString(resourceGroup().id))]",
        "vhdContainer": "vhds",
        "virtualNetworkName": "[concat(parameters('envPrefixName'), 'Vnet')]",
        "addressPrefix": "10.0.0.0/16",
        "feSubnetPrefix": "10.0.0.0/24",
        "dbSubnetPrefix": "10.0.2.0/24",
        "feNSGName": "feNsg",
        "dbNSGName": "dbNsg",
        "scriptFolder": ".",
        "scriptFileName": "configureDBfirewallUsers.ps1",
        "scriptParameters": "[parameters('username')]",
        "sqlSrvDBName": "[concat(parameters('envPrefixName'), 'sqlSrv14')]",
        "sqlVmSize": "[parameters('sqlVMSize')]",
        "sqlSrvDBOsDiskName": "[concat(parameters('envPrefixName'), 'DBSrvOS')]",
        "sqlSrvDBDataDiskName": "[concat(parameters('envPrefixName'), 'DBSrvData')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "sqlSrvDBNicName": "[concat(variables('sqlSrvDBName'), 'Nic')]",
        "sqlSvrDBSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'DBSubnetName')]",
        "sqlPublicIP": "[concat(parameters('envPrefixName'), 'SqlPip')]",
        "sqlPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('sqlPublicIP'))]",
        "sqlImagePublisher": "MicrosoftSQLServer",
        "sqlImageOffer": "SQL2016SP1-WS2016",
        "sqlImageSku": "Standard",
        "webSrvName": "[concat(parameters('envPrefixName'), 'webSrv')]",
        "webSrvVMSize": "[parameters('webSrvVMSize')]",
        "webSrvOSDiks": "[concat(parameters('envPrefixName'), 'WebSrvOS')]",
        "webSrvNicName": "[concat(variables('webSrvName'), 'Nic')]",
        "webSrvSubnetRef": "[concat(variables('vnetId'), '/subnets/', 'FESubnetName')]",
        "webSrvPublicIP": "[concat(parameters('envPrefixName'), 'websrvpip')]",
        "webSrvAvailabilitySetName": "[concat(parameters('envPrefixName'), 'webSrvAS')]",
        "webSrvNumbOfInstances": "[parameters('numberOfWebSrvs')]",
        "webSrvDnsNameforLBIP": "[concat(toLower(variables('webSrvName')), 'lb')]",
        "webLbName": "[concat(variables('webSrvName'), 'lb')]",
        "webLblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('webLbName'))]",
        "webLblb_PIP_Id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('webSrvPublicIP'))]",
        "webLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('webLbName'))]",
        "frontEndIPConfigID": "[concat(variables('webLbId'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
        "lbPoolID": "[concat(variables('webLbId'),'/backendAddressPools/BackendPool1')]",
        "lbProbeID": "[concat(variables('webLbId'),'/probes/tcpProbe')]",
        "vmExtensionName": "dscExtension",
        "vmCSExtensionName": "CustomScriptExtension",
        "modulesUrl": "https://github.com/bayernmunich/AspNetWebApp/blob/master/WebServerConfig5.0.ps1.zip?raw=true",
        "modulesDBUrl": "https://raw.githubusercontent.com/Microsoft/almvm/master/labs/vstsextend/deploymentgroups/armtemplate/configureDBfirewallUsers.ps1",
        "configurationFunction": "WebServerConfig.ps1\\WebServerConfig",
        "sqlDns": "[concat(parameters('envPrefixName'), 'sql', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('feNSGName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "FrontEndNSG"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "rdp_rule",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "web_rule",
                        "properties": {
                            "description": "Allow WEB",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('apiVersion')]",
            "name": "[variables('dbNSGName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "BackEndNSG"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "PortSql",
                        "properties": {
                            "description": "Allow FE Subnet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 109,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow_FE",
                        "properties": {
                            "description": "Allow FE Subnet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "rdp_rule",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Block_FE",
                        "properties": {
                            "description": "Block App Subnet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 121,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow_Internet",
                        "properties": {
                            "description": "Allow Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('feNSGName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('dbNSGName'))]"
            ],
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "FESubnetName",
                        "properties": {
                            "addressPrefix": "[variables('feSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('feNSGName'))]"
                            }
                        }
                    },
                    {
                        "name": "DBSubnetName",
                        "properties": {
                            "addressPrefix": "[variables('dbSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dbNSGName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [],
            "tags": {
                "displayName": "StorageForEnv"
            },
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "name": "[variables('sqlPublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "tags": {
                "displayName": "SqlPIP"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('sqlDns')]"
                }
            }
        },
        {
            "name": "[variables('sqlSrvDBNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "SQLSrvDBNic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('sqlSvrDBSubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[variables('sqlPublicIPRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(parameters('envPrefixName'), 'sqlSrv14')]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('sqlSrvDBNicName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('sqlPublicIP'))]"
            ],
            "tags": {
                "displayName": "SQL-Svr-DB"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('sqlVmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('sqlSrvDBName')]",
                    "adminUsername": "[parameters('username')]",
                    "adminPassword": "[parameters('password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('sqlImagePublisher')]",
                        "offer": "[variables('sqlImageOffer')]",
                        "sku": "[variables('sqlImageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "SQL-Svr-DBOSDisk",
                        "vhd": {
                            "uri": "[concat('http://', variables('storageName'), '.blob.core.windows.net/', variables('vhdContainer'), '/', variables('sqlSrvDBOsDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sqlSrvDBNicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('webSrvAvailabilitySetName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "WebSrvAvailabilitySet"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('webSrvPublicIP')]",            
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "tags": {
                "displayName": "WebSrvPIP for LB"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('webSrvDnsNameforLBIP')]"
                }
            }
        },
        {
        	"type": "Microsoft.Network/loadBalancers",
            "apiVersion": "[variables('apiVersion')]",
            "name": "[variables('webLbName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Web LB"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('webSrvPublicIP'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('webLblb_PIP_Id')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "BackendPool1"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "RDP-VM0",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50001,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "RDP-VM1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50002,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "RDP-VM2",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50003,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "RDP-VM3",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50004,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "RDP-VM4",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50005,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "RDP-VM5",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 50006,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('webSrvNicName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('webSrvNumbOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('webLbName'))]"
            ],
            "tags": {
                "displayName": "WebSrvNic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('webSrvSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('webLbId'), '/backendAddressPools/BackendPool1')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('webLbId'),'/inboundNatRules/RDP-VM', copyindex())]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
        	"type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('webSrvName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('apiVersion')]",
            "copy": {
                "name": "webSrvMachineLoop",
                "count": "[variables('webSrvNumbOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('webSrvNicName'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('webSrvAvailabilitySetName'))]"
            ],
            "tags": {
                "displayName": "WebSrv"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webSrvAvailabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('webSrvVMSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('webSrvName'),copyindex())]",
                    "adminUsername": "[parameters('username')]",
                    "adminPassword": "[parameters('password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "WebSvrOSDisk",
                        "vhd": {
                            "uri": "[concat('http://', variables('storageName'), '.blob.core.windows.net/', variables('vhdContainer'), '/', variables('webSrvOSDiks'), copyindex(), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webSrvNicName'), copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('webSrvName'), copyindex(),'/', variables('vmExtensionName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "webSrvMachineLoop",
                "count": "[variables('webSrvNumbOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('webSrvName'), copyindex())]"
            ],
            "tags": {
                "displayName": "VM Extensions"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ModulesUrl": "[variables('modulesUrl')]",
                    "SasToken": "",
                    "ConfigurationFunction": "[variables('configurationFunction')]",
                    "wmfVersion": "4.0",
                    "Properties": {}
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('sqlSrvDBName'), '/', variables('vmCSExtensionName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "sqlSrv14",
                "count": 1
            },
            "dependsOn": [
                "[variables('sqlSrvDBName')]"
            ],
            "tags": {
                "displayName": "VM Extensions"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.8",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('modulesDBUrl')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'), ' ', variables('scriptParameters'))]"
                }
            }
        }
    ],
    "outputs": {
        "sqldns": {
            "type": "String",
            "value": "[reference(variables('sqlPublicIP')).dnsSettings.fqdn]"
        }
    }
}



// ±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±edited±±±±±±±±±±±±±±±±±±±±±±±±±§
//[
//    {
//        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
//        "contentVersion": "1.0.0.0",
//        "parameters": {
//            "adminUsername": {
//                "type": "string",
//                "metadata": {
//                    "description": "Username for the Virtual Machine."
//                }
//            },
//            "adminPassword": {
//                "type": "securestring",
//                "metadata": {
//                    "description": "Password for the Virtual Machine."
//                }
//            },
//            "dnsLabelPrefix": {
//                "type": "string",
//                "metadata": {
//                    "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
//                }
//            },
//            "windowsOSVersion": {
//                "type": "string",
//                "defaultValue": "2016-Datacenter",
//                "allowedValues": [
//                    "2008-R2-SP1",
//                    "2012-Datacenter",
//                    "2012-R2-Datacenter",
//                    "2016-Nano-Server",
//                    "2016-Datacenter-with-Containers",
//                    "2016-Datacenter",
//                    "2019-Datacenter"
//                ],
//                "metadata": {
//                    "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
//                }
//            },
//            "location": {
//                "type": "string",
//                "defaultValue": "[resourceGroup().location]",
//                "metadata": {
//                    "description": "Location for all resources."
//                }
//            },
//            "GameStoreSQLServerAdminLogin": {
//                "type": "string",
//                "minLength": 1
//            },
//            "GameStoreSQLServerAdminLoginPassword": {
//                "type": "securestring"
//            },
//            "GameStoreName": {
//                "type": "string",
//                "minLength": 1
//            },
//            "GameStoreCollation": {
//                "type": "string",
//                "minLength": 1,
//                "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
//            },
//            "GameStoreEdition": {
//                "type": "string",
//                "defaultValue": "Basic",
//                "allowedValues": [
//                    "Basic",
//                    "Standard",
//                    "Premium"
//                ]
//            },
//            "GameStoreRequestedServiceObjectiveName": {
//                "type": "string",
//                "defaultValue": "Basic",
//                "allowedValues": [
//                    "Basic",
//                    "S0",
//                    "S1",
//                    "S2",
//                    "P1",
//                    "P2",
//                    "P3"
//                ],
//                "metadata": {
//                    "description": "Describes the performance level for Edition"
//                }
//            },
//            "DeploymentGroup": {
//                "type": "string",
//                "minLength": 1,
//                "defaultValue": "[concat(parameters('GameStoreName')), 'Group']"
//            },
//            "TeamProject": {
//                "type": "string",
//                "minLength": 1,
//                "defaultValue": "test"
//            },
//            "VSTSAccountName": {
//                "type": "string",
//                "minLength": 1,
//                "defaultValue": "arudy0539"
//            },
//            "PATToken": {
//                "type": "securestring",
//                "minLength": 1,
//                "defaultValue": "wernctexn33j6hlbj2i2jnqdcdqlqesmbbwwoyn5iqmiomof7boa"
//            }
//        },
//        "variables": {
//            "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
//            "nicName": "myVMNic",
//            "addressPrefix": "10.0.0.0/16",
//            "subnetName": "Subnet",
//            "subnetPrefix": "10.0.0.0/24",
//            "publicIPAddressName": "myPublicIP",
//            "vmName": "SimpleWinVM",
//            "virtualNetworkName": "MyVNET",
//            "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
//            "GameStoreSQLServerName": "[concat('GameStoreSQLServer', uniqueString(resourceGroup().id))]",
//            "fullyQualifiedGameStoreName": "[concat(variables('GameStoreSQLServerName'), '/', parameters('GameStoreName'))]"
//        },
//        "resources": [
//            {
//                "type": "Microsoft.Storage/storageAccounts",
//                "apiVersion": "2018-11-01",
//                "name": "[variables('storageAccountName')]",
//                "location": "[parameters('location')]",
//                "sku": {
//                    "name": "Standard_LRS"
//                },
//                "kind": "Storage",
//                "properties": {}
//            },
//            {
//                "type": "Microsoft.Network/publicIPAddresses",
//                "apiVersion": "2018-11-01",
//                "name": "[variables('publicIPAddressName')]",
//                "location": "[parameters('location')]",
//                "properties": {
//                    "publicIPAllocationMethod": "Dynamic",
//                    "dnsSettings": {
//                        "domainNameLabel": "[parameters('dnsLabelPrefix')]"
//                    }
//                }
//            },
//            {
//                "type": "Microsoft.Network/virtualNetworks",
//                "apiVersion": "2018-11-01",
//                "name": "[variables('virtualNetworkName')]",
//                "location": "[parameters('location')]",
//                "properties": {
//                    "addressSpace": {
//                        "addressPrefixes": [
//                            "[variables('addressPrefix')]"
//                        ]
//                    },
//                    "subnets": [
//                        {
//                            "name": "[variables('subnetName')]",
//                            "properties": {
//                                "addressPrefix": "[variables('subnetPrefix')]"
//                            }
//                        }
//                    ]
//                }
//            },
//            {
//                "type": "Microsoft.Network/networkInterfaces",
//                "apiVersion": "2018-11-01",
//                "name": "[variables('nicName')]",
//                "location": "[parameters('location')]",
//                "dependsOn": [
//                    "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
//                    "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
//                ],
//                "properties": {
//                    "ipConfigurations": [
//                        {
//                            "name": "ipconfig1",
//                            "properties": {
//                                "privateIPAllocationMethod": "Dynamic",
//                                "publicIPAddress": {
//                                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
//                                },
//                                "subnet": {
//                                    "id": "[variables('subnetRef')]"
//                                }
//                            }
//                        }
//                    ]
//                }
//            },
//            {
//                "type": "Microsoft.Compute/virtualMachines",
//                "apiVersion": "2018-10-01",
//                "name": "[variables('vmName')]",
//                "location": "[parameters('location')]",
//                "dependsOn": [
//                    "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
//                    "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
//                ],
//                "properties": {
//                    "hardwareProfile": {
//                        "vmSize": "Standard_A2"
//                    },
//                    "osProfile": {
//                        "computerName": "[variables('vmName')]",
//                        "adminUsername": "[parameters('adminUsername')]",
//                        "adminPassword": "[parameters('adminPassword')]"
//                    },
//                    "storageProfile": {
//                        "imageReference": {
//                            "publisher": "MicrosoftWindowsServer",
//                            "offer": "WindowsServer",
//                            "sku": "[parameters('windowsOSVersion')]",
//                            "version": "latest"
//                        },
//                        "osDisk": {
//                            "createOption": "FromImage"
//                        },
//                        "dataDisks": [
//                            {
//                                "diskSizeGB": 1023,
//                                "lun": 0,
//                                "createOption": "Empty"
//                            }
//                        ]
//                    },
//                    "networkProfile": {
//                        "networkInterfaces": [
//                            {
//                                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
//                            }
//                        ]
//                    },
//                    "diagnosticsProfile": {
//                        "bootDiagnostics": {
//                            "enabled": true,
//                            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
//                        }
//                    }
//                }
//            },
//            {
//                "name": "[concat(parameters('vmNamePrefix'),copyIndex(),'/TeamServicesAgent')]",
//                "type": "Microsoft.Compute/virtualMachines/extensions",
//                "location": "[parameters('location')]",
//                "apiVersion": "2015-06-15",
//                "dependsOn": [
//                    "[resourceId('Microsoft.Compute/virtualMachines/',concat(parameters('vmNamePrefix'),copyindex()))]"
//                ],
//                "properties": {
//                    "publisher": "Microsoft.VisualStudio.Services",
//                    "type": "TeamServicesAgent",
//                    "typeHandlerVersion": "1.0",
//                    "autoUpgradeMinorVersion": true,
//                    "settings": {
//                        "VSTSAccountName": "[parameters('VSTSAccountName')]",
//                        "TeamProject": "[parameters('TeamProject')]",
//                        "DeploymentGroup": "[parameters('DeploymentGroup')]",
//                        "AgentName": "[parameters('AgentName')]",
//                        "Tags": "[parameters('Tags')]"
//                    },
//                    "protectedSettings": {
//                        "PATToken": "[parameters('PATToken')]"
//                    }
//                }
//            },
//            {
//                "name": "[variables('GameStoreSQLServerName')]",
//                "type": "Microsoft.Sql/servers",
//                "location": "[resourceGroup().location]",
//                "apiVersion": "2014-04-01-preview",
//                "dependsOn": [],
//                "tags": {
//                    "displayName": "GameStoreSQLServer"
//                },
//                "properties": {
//                    "administratorLogin": "[parameters('GameStoreSQLServerAdminLogin')]",
//                    "administratorLoginPassword": "[parameters('GameStoreSQLServerAdminLoginPassword')]"
//                },
//                "resources": [
//                    {
//                        "name": "AllowAllWindowsAzureIps",
//                        "type": "firewallrules",
//                        "location": "[resourceGroup().location]",
//                        "apiVersion": "2014-04-01-preview",
//                        "dependsOn": [
//                            "[concat('Microsoft.Sql/servers/', variables('GameStoreSQLServerName'))]"
//                        ],
//                        "properties": {
//                            "startIpAddress": "0.0.0.0",
//                            "endIpAddress": "0.0.0.0"
//                        }
//                    }
//                ]
//            },
//            {
//                "name": "[variables('fullyQualifiedGameStoreName')]",
//                "type": "Microsoft.Sql/servers/databases",
//                "location": "[resourceGroup().location]",
//                "apiVersion": "2014-04-01-preview",
//                "dependsOn": [
//                    "[resourceId('Microsoft.Sql/servers', variables('GameStoreSQLServerName'))]"
//                ],
//                "tags": {
//                    "displayName": "GameStore"
//                },
//                "properties": {
//                    "collation": "[parameters('GameStoreCollation')]",
//                    "edition": "[parameters('GameStoreEdition')]",
//                    "maxSizeBytes": "1073741824",
//                    "requestedServiceObjectiveName": "[parameters('GameStoreRequestedServiceObjectiveName')]"
//                }
//            }
//        ],
//        "outputs": {
//            "hostname": {
//                "type": "string",
//                "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
//            }
//        }
//    }
//]



{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "GameStoreSQLServerAdminLogin": {
            "type": "string",
            "minLength": 1
        },
        "GameStoreSQLServerAdminLoginPassword": {
            "type": "securestring"
        },
        "GameStoreName": {
            "type": "string",
            "minLength": 1
        },
        "GameStoreCollation": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
        },
        "GameStoreEdition": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "GameStoreRequestedServiceObjectiveName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "P1",
                "P2",
                "P3"
            ],
            "metadata": {
                "description": "Describes the performance level for Edition"
            }
        },
        "DeploymentGroup": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "default deployment group"
        },
        "TeamProject": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "test"
        },
        "VSTSAccountName": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "arudy0539"
        },
        "PATToken": {
            "type": "securestring",
            "minLength": 1,
            "defaultValue": "wernctexn33j6hlbj2i2jnqdcdqlqesmbbwwoyn5iqmiomof7boa"
        }
    },
    "variables": {
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
        "nicName": "myVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "myPublicIP",
        "vmName": "SimpleWinVM",
        "virtualNetworkName": "MyVNET",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "GameStoreSQLServerName": "[concat('GameStoreSQLServer', uniqueString(resourceGroup().id))]",
        "fullyQualifiedGameStoreName": "[concat(variables('GameStoreSQLServerName'), '/', parameters('GameStoreName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-11-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('dnsLabelPrefix'),'/TeamServicesAgent')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.VisualStudio.Services",
                "type": "TeamServicesAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "VSTSAccountName": "[parameters('VSTSAccountName')]",
                    "TeamProject": "[parameters('TeamProject')]",
                    "DeploymentGroup": "[parameters('DeploymentGroup')]",
                    "AgentName": "[parameters('AgentName')]",
                    "Tags": "[parameters('Tags')]"
                },
                "protectedSettings": {
                    "PATToken": "[parameters('PATToken')]"
                }
            }
        },
        {
            "name": "[variables('GameStoreSQLServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [],
            "tags": {
                "displayName": "GameStoreSQLServer"
            },
            "properties": {
                "administratorLogin": "[parameters('GameStoreSQLServerAdminLogin')]",
                "administratorLoginPassword": "[parameters('GameStoreSQLServerAdminLoginPassword')]"
            },
            "resources": [
                {
                    "name": "AllowAllWindowsAzureIps",
                    "type": "firewallrules",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('GameStoreSQLServerName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "name": "[variables('fullyQualifiedGameStoreName')]",
            "type": "Microsoft.Sql/servers/databases",
            "location": "[resourceGroup().location]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('GameStoreSQLServerName'))]"
            ],
            "tags": {
                "displayName": "GameStore"
            },
            "properties": {
                "collation": "[parameters('GameStoreCollation')]",
                "edition": "[parameters('GameStoreEdition')]",
                "maxSizeBytes": "1073741824",
                "requestedServiceObjectiveName": "[parameters('GameStoreRequestedServiceObjectiveName')]"
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}